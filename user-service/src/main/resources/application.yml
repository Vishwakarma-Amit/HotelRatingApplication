server:
  port: 8081

spring:
#  profiles:
#    active: prod

  config:
    import: optional:configserver:http://localhost:8085
  application:
    name: USER-SERVICE
  datasource:
    username: root
    password: Pa$$w0rd@123
    url: jdbc:mysql://localhost:3306/user-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-79418932.okta.com/oauth2/default
      client:
        
        provider:
          okta:
            issuer-uri: https://dev-79418932.okta.com/oauth2/default
      
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oace2ckseP162Oiu5d7
            client-secret: gtoFl6svJjHGjyfAHCx3v_ROtGko3cWuECjrCBgo2IL6cwJCF9J4bKa4wzd32k2t
    
          
        
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always

      
resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        
  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s
        
  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s
        


okta:
  oauth2:
    issuer: https://dev-79418932.okta.com/oauth2/default
    audience: api://default

    
        
        
        
        
        
        
        
        
        
      


  